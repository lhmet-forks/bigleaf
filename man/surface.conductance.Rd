% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bigleaf.R
\name{surface.conductance}
\alias{surface.conductance}
\title{Surface conductance to water vapor}
\usage{
surface.conductance(data, Tair = "Tair", pressure = "pressure", Rn = "Rn",
  G = NULL, S = NULL, VPD = "VPD", LE = "LE", Ga = "Ga",
  missing.G.as.NA = FALSE, missing.S.as.NA = FALSE, PM = TRUE,
  constants = bigleaf.constants())
}
\arguments{
\item{data}{Data.frame or matrix containing all required input variables}

\item{Tair}{Air temperature (deg C)}

\item{pressure}{Atmospheric pressure (kPa)}

\item{Rn}{Net radiation (W m-2)}

\item{G}{Ground heat flux (W m-2); optional}

\item{S}{Sum of all storage fluxes (W m-2); optional}

\item{VPD}{Vapor pressure deficit (kPa)}

\item{LE}{Latent heat flux (W m-2)}

\item{Ga}{Aerodynamic conductance (m s-1)}

\item{missing.G.as.NA}{if TRUE, missing G are treated as NA,otherwise set to 0.}

\item{missing.S.as.NA}{if TRUE, missing S are treated as NA,otherwise set to 0.}

\item{PM}{Calculate Gs based on the inverted Penman-Monteith (PM) equation? 
Defaults to TRUE. If FALSE, a simple gradient-conductance approach is used.}

\item{constants}{cp - specific heat of air for constant pressure (J K-1 kg-1) \cr
eps - ratio of the molecular weight of water vapor to dry air (-) \cr
Rd - gas constant of dry air (J kg-1 K-1) \cr
Rgas - universal gas constant (J mol-1 K-1) \cr
Kelvin - conversion degree Celsius to Kelvin \cr
Mw - molar mass of water vapor (kg mol-1)}
}
\value{
a dataframe with the following columns: 
 \item{Gs_ms}{Surface conductance in m s-1}
 \item{Gs_mol}{Surface conductance in mol m-2 s-1}
}
\description{
Calculates surface conductance to water vapor from the inverted Penman-Monteith
             equation.
}
\details{
Surface conductance (Gs) is calculated from the inverted Penman-Monteith equation:

 \deqn{Gs = ( LE * Ga * \gamma ) / ( \Delta * (Rn-G-S) + \rho * cp * Ga * VPD - LE * ( \Delta + \gamma ) )}
 
 Note that Gs > Gc (canopy conductance) under conditions when a significant fraction of 
 ET comes from interception or soil evaporation. 
 Available energy A is defined as A = Rn - G - S. If G and/or S are not provided, then A = Rn.
 
 By default, any missing data in G and S are set to 0. If arguments \code{missing.S.as.NA} or \code{missing.S.as.NA} are 
 set to TRUE, Gs will give NA for these timesteps.
 
 If pressure is not available, it can be approximated by elevation using the 
 function \code{\link{pressure.from.elevation}}
 
 If PM is set to FALSE, Gs is calculated from VPD and ET only:
 
 \deqn{Gs = ET/pressure * VPD}
 
 Note that this approach assumes fully coupled conditions (Ga = inf).
}
\examples{
load("DE-Tha_2010.rda") # load data

# filter data to ensure that Gs is a meaningful proxy to canopy conductance (Gc)
DE_Tha_2010 <- filter.data(DE_Tha_2010,quality.control=TRUE,quality.ext="_qc",
                           vars.qc=c("precip","Tair","VPD","GPP_nt","H","LE"),
                           tprecip=0.01,precip.hours=24,NA.as.precip=F,trad=200,
                           ttemp=5,tustar=0.2,tGPP=0.5,ws=15,min.int=5,trH=0.95) 

# select data that were filtered as in the previous function and in June 
DE_Tha_June_2010 <- DE_Tha_2010[DE_Tha_2010[,"valid"] == 1 & DE_Tha_2010[,"month"] == 6,]

# calculate Gs based on a simple gradient approach
Gs_gradient <- surface.conductance(DE_Tha_June_2010,Tair="Tair",pressure="pressure",VPD="VPD",PM=FALSE)
summary(Gs_gradient)

# calculate Gs from the the inverted PM equation (now Rn, and Ga are needed)
# calculate a simple estimate of Ga based on Thom 1972
Ga <- aerodynamic.conductance(DE_Tha_June_2010,stab_correction=F,Rb_model="Thom_1972")[,"Ga_h"]

# if G and/or S are available, don't forget to indicate (they are ignored by default). Note that
# note that Ga is not added to the data.frame 'DE_Tha_June_2010'
Gs_PM <- surface.conductance(DE_Tha_June_2010,Tair="Tair",pressure="pressure",Rn="Rn",G="G",S=NULL,
                             VPD="VPD",Ga=Ga,PM=TRUE)
summary(Gs_PM)


# compare to an Ga estimate that accounts for stability effects
Ga_stab <- aerodynamic.conductance(DE_Tha_June_2010,zr=42,zh=26.5,d=18.5,z0m=2.6,stab_correction=T,
                              Rb_model="Thom_1972")[,"Ga_h"]
                              
# now add Ga2 to the data.frame 'DE_Tha_June_2010'
DE_Tha_June_2010$Ga_stab <- Ga_stab
Gs_PM2 <- surface.conductance(DE_Tha_June_2010,Tair="Tair",pressure="pressure",Rn="Rn",G="G",S=NULL,
                             VPD="VPD",Ga="Ga_stab",PM=TRUE)
summary(Gs_PM2)
                             
}
