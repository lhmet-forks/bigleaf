% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bigleaf.R
\name{surface.conditions}
\alias{surface.conditions}
\title{Big-leaf surface conditions}
\usage{
surface.conditions(data, Tair = "Tair", pressure = "pressure", LE = "LE",
  H = "H", VPD = "VPD", Ga = "Ga", calc.Csurf = F, Ca = "Ca",
  Ga_CO2 = "Ga_CO2", NEE = "NEE", constants = bigleaf.constants())
}
\arguments{
\item{data}{Data.frame or matrix containing all required input variables}

\item{Tair}{Air temperature (deg C)}

\item{pressure}{Atmospheric pressure (kPa)}

\item{LE}{Latent heat flux (W m-2)}

\item{H}{Sensible heat flux (W m-2)}

\item{VPD}{Vapor pressure deficit (kPa)}

\item{Ga}{Aerodynamic conductance for heat and water vapor (m s-1)}

\item{calc.Csurf}{Calculate surface CO2 concentration?}

\item{Ca}{Atmospheric CO2 concentration (mol mol-1). Required if calc.Ca = TRUE}

\item{Ga_CO2}{Aerodynamic conductance for CO2 (m s-1). Required if calc.Ca = TRUE}

\item{NEE}{Net ecosystem exchange (umol m-2 s-1). Required if calc.Ca = TRUE}

\item{constants}{cp - specific heat of air for constant pressure (J K-1 kg-1) \cr 
eps - ratio of the molecular weight of water vapor to dry air (-) \cr}
}
\value{
a data.frame with the following columns:
        \item{Tsurf}{Surface temperature (deg C)} \cr
        \item{esat_surf}{Saturation vapor pressure at the surface (kPa)} \cr
        \item{esurf}{vapor pressure at the surface (kPa)} \cr
        \item{VPD_surf}{vapor pressure deficit at the surface (kPa)} \cr
        \item{qsurf}{specific humidity at the surface (kg kg-1)} \cr
        \item{rH_surf}{relative humidity at the surface (-)} \cr
        \item{Ca_surf}{CO2 concentration at the surface (umol mol-1)}
}
\description{
Calculates meteorological conditions at the big-leaf surface
             by inverting bulk transfer equations for water, energy, and carbon
             fluxes.
}
\details{
Canopy surface temperature and humidity are calculated by inverting bulk transfer equations of
         sensible and latent heat, respectively. 'Canopy surface' in this case refers to 
         the surface of the big-leaf (i.e. at height d + z0h; the apparent sink of sensible heat and water vapor).
         Aerodynamic canopy surface temperature is given by:
         
         \deqn{Tsurf = Tair + H / (\rho * cp * Ga)}
         
         Vapor pressure at the canopy surface is:
         
         \deqn{esurf = e + (LE * \gamma)/(Ga * \rho * cp)}
         
         Vapor pressure deficit (VPD) at the canopy surface is calculated as:
         
         \deqn{VPD_surf = Esat_surf - esurf}
         
         Note that Ga is assumed to be equal for water vapor and sensible heat.
         Ga is further assumed to be the inverse of the sum of the turbulent part
         and the canopy boundary layer conductance (1/Ga = 1/Ga_m + 1/Gb; 
         see \code{\link{aerodynamic.conductance}}). If Ga is replaced by Ga_m (i.e.
         only the turbulent conductance part), the results of the functions represent
         conditions outside the canopy boundary layer, i.e. in the canopy airspace.
}
\examples{
# calculate surface temperature, water vapor, VPD etc. at the surface
# for a given temperature and turbulent fluxes, and under different 
# aerodynamic conductance.
surface.conditions(Tair=25,pressure=100,LE=100,H=200,VPD=1.2,Ga=c(0.02,0.05,0.1)) 
         
# now calculate also surface CO2 concentration
surface.conditions(Tair=25,pressure=100,LE=100,H=200,VPD=1.2,Ga=c(0.02,0.05,0.1),
                   Ca=400,Ga_CO2=c(0.02,0.05,0.1),NEE=-20,calc.Csurf=TRUE)                                                                                                                                                                                                                                                                                                            

}
